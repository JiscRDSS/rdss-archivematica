---

#
# Builds core RDSSARK images intended for production deployment and publishes
# them to the given Docker registry.
#
# Usage:
#
#     $ ansible-playbook publish-images-playbook.yml \
#           --extra-vars="registry=aws_account_id.dkr.ecr.region.amazonaws.com/"
#

- hosts: "localhost"
  connection: "local"

  vars:

    projects:

      - name: "Archivematica (JiscRDSS fork)"
        repo: "https://github.com/JiscRDSS/archivematica"
        version: "v0.5.0"
        dest: "./src/archivematica"
        images:
          - name: "{{ registry }}archivematica-dashboard"
            path: "./src/archivematica/src/"
            dockerfile: "dashboard.Dockerfile"
          - name: "{{ registry }}archivematica-mcp-server"
            path: "./src/archivematica/src/"
            dockerfile: "MCPServer.Dockerfile"
          - name: "{{ registry }}archivematica-mcp-client"
            path: "./src/archivematica/src/"
            dockerfile: "MCPClient.Dockerfile"

      - name: "Archivematica Storage Service (JiscRDSS fork)"
        repo: "https://github.com/JiscRDSS/archivematica-storage-service"
        version: "v0.3.0"
        dest: "./src/archivematica-storage-service"
        images:
          - name: "{{ registry }}archivematica-storage-service"
            path: "./src/archivematica-storage-service/"
            dockerfile: "Dockerfile"

      - name: "RDSS Archivematica Automation Tools"
        repo: "https://github.com/JiscRDSS/rdss-archivematica-automation-tools.git"
        version: "v0.1.2"
        dest: "./src/rdss-archivematica-automation-tools"
        images:
          - name: "{{ registry }}archivematica-automation-tools"
            path: "./src/rdss-archivematica-automation-tools/"
            dockerfile: "Dockerfile"

      - name: "RDSS Archivematica Channel Adapter"
        repo: "https://github.com/JiscRDSS/rdss-archivematica-channel-adapter"
        version: "v0.5.0"
        dest: "./src/rdss-archivematica-channel-adapter"
        images:
          - name: "{{ registry }}rdss-archivematica-channel-adapter"
            path: "./src/rdss-archivematica-channel-adapter/"
            dockerfile: "Dockerfile"

      - name: "RDSS Arkivum NextCloud"
        repo: "https://github.com/JiscRDSS/rdss-arkivum-nextcloud"
        version: "v0.2.2"
        dest: "./src/rdss-arkivum-nextcloud"
        make_target: "build-files-move-app"
        images:
          - name: "{{ registry }}nextcloud"
            path: "./src/rdss-arkivum-nextcloud/"
            dockerfile: "Dockerfile"

  tasks:

    - name: "Ensure that the variable registry is defined"
      fail:
        msg: "Variable registry is undefined or empty"
      when: "(registry is not defined) or (registry | trim == '')"

    - name: "Install playbook dependencies"
      pip:
        name: "{{ item }}"
        extra_args: "--user"
      with_items:
        - "setuptools"
        - "docker"

    - name: "Clone repositories"
      git:
        accept_hostkey: "yes"
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version }}"
      register: "git_clone"
      with_items: "{{ projects }}"
      tags:
        - "clone"

    - name: "Prepare source"
      make:
        chdir: "{{ item.item.dest }}"
        target: "{{ item.item.make_target}}"
      when: item.changed and item.item.make_target is defined
      with_items: "{{ git_clone.results }}"
      tags:
        - "build"
        # Ignore false ANSIBLE0016 claiming this task should be a handler
        - skip_ansible_lint

    - name: "Build and tag images"
      command: "docker build
        -t {{ item.1.name }}:{{ item.0.item.version | regex_replace('/', '_')  | truncate(128, True)}}
        -t {{ item.1.name }}:latest
        --build-arg ARCHIVEMATICA_VERSION={{ rdss_version }}
        --build-arg AGENT_CODE={{ rdss_version }}
        -f {{ item.1.dockerfile }} ."
      args:
        chdir: "{{ item.1.path }}"
      when: item.0.changed
      with_subelements:
        - "{{ git_clone.results }}"
        - item.images
      tags:
        - "build"
        # Ignore false ANSIBLE0016 claiming this task should be a handler
        - skip_ansible_lint

    - name: "Publish images"
      command: docker push "{{ item.1.name }}"
      when: item.0.changed
      with_subelements:
        - "{{ git_clone.results }}"
        - item.images
      tags:
        - "publish"
        # Ignore false ANSIBLE0016 claiming this task should be a handler
        - skip_ansible_lint
