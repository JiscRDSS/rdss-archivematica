---

#
# Builds supporting RDSS Archivematica images used for QA and publishes them to
# the given Docker registry.
#
# Usage:
#
#     $ ansible-playbook publish-qa-images-playbook.yml \
#           --extra-vars="registry=aws_account_id.dkr.ecr.region.amazonaws.com/"
#

- hosts: "localhost"
  connection: "local"

  vars:
    repos:
      - name: "RDSS Archivematica Channel Adapter"
        repo: "https://github.com/JiscRDSS/rdss-archivematica-channel-adapter"
        version: "v0.2.5"
        dest: "./src/rdss-archivematica-channel-adapter"
      - name: "RDSS Archivematica MsgCreator"
        repo: "https://github.com/JiscRDSS/rdss-archivematica-msgcreator"
        version: "master"
        dest: "./src/rdss-archivematica-msgcreator"
    images:
      - name: "{{ registry }}rdss-archivematica-msgcreator"
        dockerfile: "Dockerfile"
        path: "./src/rdss-archivematica-msgcreator/"
        tag: "latest"
      - name: "{{ registry }}dynalite"
        path: "./src/rdss-archivematica-channel-adapter/hack/minikine"
        dockerfile: "dynalite.Dockerfile"
        tag: "latest"
      - name: "{{ registry }}minikine"
        path: "./src/rdss-archivematica-channel-adapter/hack/minikine"
        dockerfile: "minikine.Dockerfile"
        tag: "latest"


  tasks:

    - name: "Ensure that the variable registry is defined"
      fail:
        msg: "Variable registry is undefined"
      when: "registry is not defined"

    - name: "Install playbook dependencies"
      pip:
        name: "{{ item }}"
        extra_args: "--user"
      with_items:
        - "setuptools"
        - "docker-py"

    - name: "Clone repositories"
      git:
        accept_hostkey: "yes"
        repo: "{{ item.repo }}"
        dest: "{{ item.dest }}"
        version: "{{ item.version }}"
      with_items: "{{ repos }}"

    - name: "Build and publish images"
      docker_image:
        name: "{{ item.name }}"
        tag: "{{ item.tag }}"
        path: "{{ item.path }}"
        dockerfile: "{{ item.dockerfile }}"
        push: "yes"
        state: "present"
        force: "yes"
      with_items: "{{ images }}"
