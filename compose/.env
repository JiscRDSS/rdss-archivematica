#
# RDSS-Archivematica docker-compose environment variables
#

# Override the docker-compose project name
COMPOSE_PROJECT_NAME=rdss

# The private registry to use to pull our images from. Defaults to '', which means
# all images will be built by docker-compose.
REGISTRY=

# The version of this repo. This is expected to be overridden using output from Git,
# i.e. ` git describe --tags --always --dirty`.
VERSION="v0.0.0-dirty"

# The base dir for the the project. This needs overriding if deploying to a remote
# DOCKER_HOST.
VOL_BASE=.


## Image Versions #############################################################

# Override these to use specific versions of each image.

# Archivematica
AM_AUTOTOOLS_VERSION=latest
AM_DASHBOARD_VERSION=latest
AM_MCPCLIENT_VERSION=latest
AM_MCPSERVER_VERSION=latest
AM_SS_VERSION=latest

# NextCloud
NEXTCLOUD_VERSION=latest

# RDSS Channel Adapter
DYNALITE_VERSION=latest
MINIKINE_VERSION=latest
RDSS_CHANADAPTER_VERSION=latest
RDSS_MSGCREATOR_VERSION=latest

# Shibboleth SP Proxy
SHIB_SPPROXY_VERSION=latest


## Archivematica ##############################################################

# Whether you want Gunicorn to reload the code automatically.
# Gunicorn is only used in the Dashboard and Storage Service.
AM_GUNICORN_RELOAD=false
SS_GUNICORN_RELOAD=false

# The reload engine used by Gunicorn.
AM_GUNICORN_RELOAD_ENGINE=auto
SS_GUNICORN_RELOAD_ENGINE=auto

# Number of workers you want to run in Gunicorn.
AM_GUNICORN_WORKERS=1
SS_GUNICORN_WORKERS=1

# Generally the access log is not useful for developers. You can obtain similar
# information looking at Nginx logs. If /dev/null is used you will still see
# the standard stream logger output.
AM_GUNICORN_ACCESSLOG=/dev/null
SS_GUNICORN_ACCESSLOG=/dev/null

# The external port for the Archivematica Dashboard and Storage Service user interfaces.
AM_EXTERNAL_PORT=443

# Default email address to use for various email reports sent by MCPClient
# or Dashboard.
AM_DEFAULT_FROM_EMAIL=noreply@researchdata.alpha.jisc.ac.uk


## Elasticsearch ##############################################################

# HEAP size, ensuring that the min (Xms) and max (Xmx) sizes are the same,
# preventing the heap from being resized at runtime, a very costly process. The
# default JVM memory settings (-Xms256m -Xmx1g) is insufficient and costly.
ES_HEAP_SIZE=1g


## NextCloud ##################################################################

# The external IP address for the NextCloud service. By default we bind to all
# interfaces.
NEXTCLOUD_EXTERNAL_IP=0.0.0.0

# The external port for the NextCloud user interface.
NEXTCLOUD_EXTERNAL_PORT=8888

# The external port for the NextCloud user interface when running with SSL.
NEXTCLOUD_EXTERNAL_SSL_PORT=443

# The group id of the user to run NextCloud as. This is the group id that will
# be used to access any configured storage locations. Default is 333, to allow
# NextCloud to access Archivematica data.
NEXTCLOUD_RUNAS_GID=333

# The user id of the user to run NextCloud as. This is the user id that will be
# used to access any configured storage locations. Default is 991.
NEXTCLOUD_RUNAS_UID=991


## Shibboleth #################################################################

# The domain name to use in certificates and hostnames etc.
DOMAIN_NAME=example.ac.uk

# The organisation that owns the domain. This is used in LDAP and CA config.
DOMAIN_ORGANISATION="Example University"

# The external IP address for the local Shibboleth IdP service. By default we
# bind to all interfaces.
IDP_EXTERNAL_IP=0.0.0.0

# The external port for the local Shibboleth IdP service.
IDP_EXTERNAL_PORT=4443

# The external IP address for the nginx service. By default we bind to all
# interfaces.
NGINX_EXTERNAL_IP=0.0.0.0


## RDSS Channel Adapter ######################################################

# The endpoint to use for the DynamoDB service. Defaults to using the mock
# "dynalite" service.
RDSS_ADAPTER_DYNAMODB_ENDPOINT=http://dynalite:4567/

# Whether or not to use TLS when connecting to the DynamoDB endpoint. Defaults
# to false.
RDSS_ADAPTER_DYNAMODB_TLS=false

# The AWS access key to use when accessing Kinesis. Not used for mock service.
RDSS_ADAPTER_KINESIS_AWS_ACCESS_KEY=minikine-ignores-this

# The AWS region to use when accessing Kinesis. Not used for mock service.
RDSS_ADAPTER_KINESIS_AWS_REGION=minikine-ignores-this

# The AWS secret key to use when accessing Kinesis. Not used for mock service.
RDSS_ADAPTER_KINESIS_AWS_SECRET_KEY=minikine-ignores-this

# The endpoint to use for the Kinesis stream service. Defaults to using the
# mock "minikine" service.
RDSS_ADAPTER_KINESIS_ENDPOINT=http://minikine:4567/

# The IAM role that the channel adapter should use when connecting to Kinesis.
# Not used by mock service. Defaults to undefined, meaning no role will be used.
RDSS_ADAPTER_KINESIS_ROLE=

#External id defined in the  IAM role for cross account access. 
RDSS_ADAPTER_KINESIS_ROLE_EXTERNAL_ID=

# Whether or not to use TLS when connecting to the Kinesis endpoint. Defaults
# to false.
RDSS_ADAPTER_KINESIS_TLS=false

# The name of the queue to post error messages to. Defaults to "error".
RDSS_ADAPTER_QUEUE_ERROR=error

# The name of the queue to read input messages from. Defaults to "input".
RDSS_ADAPTER_QUEUE_INPUT=input

# The name of the queue to post invalid messages to. Defaults to "invalid".
RDSS_ADAPTER_QUEUE_INVALID=invalid

# The name of the queue to post output messages to. Defaults to "output".
RDSS_ADAPTER_QUEUE_OUTPUT=output

# The AWS access key to use when accessing S3. Not used for mock service.
RDSS_ADAPTER_S3_AWS_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE

# The AWS region to use when accessing S3.
RDSS_ADAPTER_S3_AWS_REGION=eu-west-2

# The AWS secret key to use when accessing S3. Not used for mock service.
RDSS_ADAPTER_S3_AWS_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# The endpoint to use for the S3 service. Defaults to using the mock "minio"
# service.
RDSS_ADAPTER_S3_ENDPOINT=https://minio:9000



## Registry ###################################################################

# The port to run a Docker registry on. Change if running multiple registries
# on the same machine, e.g. in multi-user development environment.
REGISTRY_PORT=5000

# The port on which to run the frontend for the Docker registry. Change if the
# default port is already in use.
REGISTRY_FRONTEND_PORT=8000

## Instrumentation ############################################################

INSTRUMENTATION_ADMIN_USER=admin
INSTRUMENTATION_ADMIN_PASSWORD=admin1234
